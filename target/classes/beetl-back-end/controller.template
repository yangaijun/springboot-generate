package ${package};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;
import java.util.List;

import ${impPo};
import ${impVo};
import ${impService};

@EnableAutoConfiguration
@RestController
@RequestMapping(value="/${strutil.toLowerCase(entityName)}")
public class ${entityName}Controller {
	@Autowired
	private ${entityName}Service ${varName}Service;

	/**
     *${tableComment}添加
     **/
    @RequestMapping(value="/save", method=RequestMethod.POST)
    @Transactional(propagation = Propagation.REQUIRED, rollbackFor = Throwable.class)
    public Object save${entityName}(
            @RequestBody ${entityName}${poSuffix} ${varName}) {
        return ${varName}Service.save(${varName});
    }

    /**
     *${tableComment}修改
     **/
    @RequestMapping(value="/update", method=RequestMethod.POST)
    @Transactional(propagation = Propagation.REQUIRED, rollbackFor = Throwable.class)
    public Object update${entityName}(
            @RequestBody ${entityName}${poSuffix} ${varName}) {
        return ${varName}Service.updateById(${varName});
    }

	/**
	 *${tableComment}添加或修改 
	 **/
	@RequestMapping(value="/saveOrUpdate", method=RequestMethod.POST)
	@Transactional(propagation = Propagation.REQUIRED, rollbackFor = Throwable.class)
    public Object saveOrUpdate${entityName}(
    		@RequestBody ${entityName}${poSuffix} ${varName}) {
        return ${varName}Service.saveOrUpdate(${varName});
    }

    /**
	 *${tableComment}查找
	 **/
	@RequestMapping(value="/search", method = RequestMethod.POST)
    public Object search${entityName}(@RequestBody ${entityName}${voSuffix} params) {
        ${entityName}${poSuffix} ${varName}${poSuffix} = new ${entityName}${poSuffix}();
        BeanUtils.copyProperties(params, ${varName}${poSuffix});
        Page<${entityName}${poSuffix}> page = new Page<>(params.getPageNo(), params.getPageSize());

        QueryWrapper<${entityName}${poSuffix}> queryWrapper = new QueryWrapper<>(${varName}${poSuffix});

        return ${varName}Service.page(page, queryWrapper);
    }
    
	/**
	 *${tableComment}通过id删除
	 **/
	@Transactional(propagation = Propagation.REQUIRED, rollbackFor = Throwable.class)
	@RequestMapping(value="/removeById/{id}", method=RequestMethod.POST)
    public Object remove${entityName}ById(@PathVariable Integer id) {
        return ${varName}Service.removeById(id);
    }

    /**
     *${tableComment}删除
     **/
    @Transactional(propagation = Propagation.REQUIRED, rollbackFor = Throwable.class)
    @RequestMapping(value="/remove", method=RequestMethod.POST)
    public Object remove${entityName}(@RequestBody ${entityName}${poSuffix} ${varName}) {
        return ${varName}Service.remove(new QueryWrapper<>(${varName}));
    }

    /**
     *${tableComment}删除多条
     **/
    @Transactional(propagation = Propagation.REQUIRED, rollbackFor = Throwable.class)
    @RequestMapping(value="/removeByIds", method=RequestMethod.POST)
    public Object remove${entityName}ByIds(@RequestBody List<Integer> ids) {
        return ${varName}Service.removeByIds(ids);
    }
}
